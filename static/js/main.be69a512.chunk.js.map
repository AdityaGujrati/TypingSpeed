{"version":3,"sources":["Home/Js/Navbar.js","Home/Js/Body.js","Home/Js/Home.js","Home/Test/js/Result.js","Home/Test/js/Timer.js","Home/Test/css/restart.png","Home/Test/js/Test.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","src","Body","style","width","margin","textDecoration","Home","Result","props","correctWord","wrongWord","speed","keyStroke","class","color","Timer","useState","timeElapsed","setTimeElapsed","startCounting","setSpeed","setCurrTime","restartPressed","useEffect","id","setInterval","oldTime","clearInterval","toFixed","sentences","i","Math","abs","floor","random","Word","text","active","correct","incorrect","console","log","React","memo","typed","split","sort","Test","userInput","setUserInput","activeWord","setActiveWord","correctWordArray","setCorrectWordArray","setCounting","hide","setHide","setKeyStroke","currTime","first","second","setCorrectWord","temp","filter","Boolean","length","temp2","setRestartPressed","display","map","char","index","value","placeholder","onChange","e","endsWith","data","word","trim","newResult","processInput","target","onClick","restartPng","justifyContent","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be69a512.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../Css/Navbar.css\";\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"navbar_container\">\r\n      <div className=\"navbar_container_left\">\r\n        <Link to=\"/\">\r\n          <div className=\"navbar_container_logo\">\r\n            <img src=\"https://www.typingtest.com/forms/img/logo.svg\" />\r\n          </div>\r\n        </Link>\r\n        <div className=\"navbar_title text\">Improve typing speed</div>\r\n      </div>\r\n      <div className=\"navbar_container_right text\">\r\n        <div>Contact us </div>\r\n        <div>FAQ</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../Css/Body.css\";\r\nimport DropDown from \"./DropDown\";\r\nfunction Body() {\r\n  return (\r\n    <div className=\"body_container\">\r\n      <div className=\"body_grid\">\r\n        <div className=\"body_grid_object text\">Typing Text</div>\r\n        <div className=\"body_grid_object text\">Typing Course</div>\r\n        <div className=\"body_grid_object text\">Typing Keys</div>\r\n        <div className=\"body_grid_object text\">Typing Games</div>\r\n        <div className=\"body_grid_object text\">Typing Race</div>\r\n      </div>\r\n      <div className=\"typing_test\">\r\n        <div className=\"typing_test_heading text\">\r\n          Check your typing skills in a minute\r\n        </div>\r\n        {/* <div className=\"typing_input\">\r\n          <div className=\"typing_input_heading\"> Choose the speed </div>\r\n          <div>\r\n            <DropDown />\r\n          </div>\r\n        </div> */}\r\n        <div style={{ width: \"113px\", margin: \"auto\" }}>\r\n          <Link to=\"/test\" style={{ textDecoration: \"none\" }}>\r\n            <div className=\"start_test_button\">start Test</div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"../Css/Home.css\";\r\nimport Body from \"./Body\";\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home_navbar\">\r\n        <Navbar />\r\n      </div>\r\n      <hr />\r\n      <div className=\"home_body\">\r\n        <Body />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"../css/Result.css\";\r\nfunction Result(props) {\r\n  const { correctWord, wrongWord, speed, keyStroke } = props;\r\n\r\n  return (\r\n    <div class=\"result\">\r\n      <div className=\"result_heading\">Results</div>\r\n      <div className=\"result_speed_section\">{speed} WPM</div>\r\n      <hr />\r\n      <div className=\"result_description\">\r\n        <div style={{ color: \"green\" }}>\r\n          <div className=\"result_description_col\">Correct Word</div>\r\n          <div className=\"result_description_col\">Wrong Word</div>\r\n          <div className=\"result_description_col\">speed</div>\r\n          <div className=\"result_description_col\">keyStroke</div>\r\n        </div>\r\n        <div className=\"result_answer\">\r\n          <div className=\"result_description_col\">{correctWord}</div>\r\n          <div className=\"result_description_col\">{wrongWord}</div>\r\n          <div className=\"result_description_col\">{speed}</div>\r\n          <div className=\"result_description_col\">{keyStroke}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n\r\n{\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Timer(props) {\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const { startCounting, correctWord, setSpeed, setCurrTime, restartPressed } =\r\n    props;\r\n  useEffect(() => {\r\n    let id;\r\n    if (restartPressed) setTimeElapsed(0);\r\n    if (startCounting) {\r\n      id = setInterval(() => {\r\n        setTimeElapsed((oldTime) => oldTime + 1);\r\n        setCurrTime((oldTime) => oldTime + 1);\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      clearInterval(id);\r\n    };\r\n  }, [startCounting]);\r\n\r\n  const minute = timeElapsed / 60;\r\n  setSpeed((correctWord / minute || 0).toFixed(0));\r\n  return (\r\n    <div>\r\n      <div>Time:{timeElapsed}</div>\r\n      {/* <div>speed:{(correctWord / minute || 0).toFixed(0)} WPM</div>  */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","export default __webpack_public_path__ + \"static/media/restart.f72baf46.png\";","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Navbar from \"../../Js/Navbar\";\r\nimport \"../css/Test.css\";\r\nimport Content from \"./Content\";\r\nimport Result from \"./Result\";\r\nimport Timer from \"./Timer\";\r\nimport restartPng from \"../css/restart.png\";\r\n// import ReactCSSTransitionGroup from \"react-transition-group\"; // ES6\r\n// var ReactCSSTransitionGroup = require(\"react-transition-group\");\r\nconst sentences = [\r\n  `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the `,\r\n  `It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout`,\r\n  `The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed`,\r\n  `There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour`,\r\n  `randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum`,\r\n  `All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet`,\r\n  `orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore e`,\r\n  `orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore e`,\r\n  `orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore e`,\r\n  `orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore e`,\r\n  `orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore e`,\r\n  `orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore e`,\r\n  `orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore e`,\r\n  `orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore e`,\r\n  `orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore e`,\r\n  `orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore e`,\r\n  `orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore e`,\r\n];\r\nlet i = Math.abs(Math.floor(Math.random() * 10)) - 3;\r\nconsole.log(i);\r\nfunction Word(props) {\r\n  const { text, active, correct, incorrect } = props;\r\n  if (active) return <span className=\"active\"> {text} </span>;\r\n  if (correct === true) {\r\n    return <span className=\"correct\"> {text} </span>;\r\n  }\r\n  if (correct === false) return <span className=\"incorrect\"> {text} </span>;\r\n\r\n  return <span> {text} </span>;\r\n}\r\n\r\nWord = React.memo(Word);\r\n\r\nvar typed = sentences[i].split(\" \").sort(() => (Math.random() > 0.5 ? 1 : -1));\r\nfunction Test() {\r\n  // variable declaring section\r\n\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [activeWord, setActiveWord] = useState(0);\r\n  const [correctWordArray, setCorrectWordArray] = useState([]);\r\n  // const typed = useRef(getCloud());\r\n  const [startCounting, setCounting] = useState(false);\r\n  const [hide, setHide] = useState(false);\r\n  const [speed, setSpeed] = useState(0);\r\n  const [keyStroke, setKeyStroke] = useState(0);\r\n  const [currTime, setCurrTime] = useState(0);\r\n  const [correctWord, setCorrectWord] = useState({ first: 0, second: 0 });\r\n  // function declaring section\r\n  // console.log(\"curr time is \" + currTime);\r\n  let finished = 10;\r\n\r\n  useEffect(() => {\r\n    if (currTime === finished) {\r\n      console.log(\"ur time has finished\");\r\n      // overflow\r\n      // setCorrectWord(first :'1',)\r\n      if (startCounting) {\r\n        // setRestartPressed(true);\r\n        let temp = correctWordArray.filter(Boolean).length + correctWord.first;\r\n        let temp2 =\r\n          correctWordArray.length -\r\n          correctWordArray.filter(Boolean).length +\r\n          correctWord.second;\r\n        setCorrectWord({ first: temp, second: temp2 });\r\n      }\r\n      setCounting(false);\r\n      setHide(true);\r\n      setUserInput(\"time has completed\");\r\n      // return;\r\n    }\r\n  });\r\n\r\n  const processInput = (value) => {\r\n    // console.log(co)\r\n    if (hide === false) setCounting(true);\r\n    if (startCounting == true) setKeyStroke(keyStroke + 1);\r\n    // setRestartPressed(false);\r\n    if (value.endsWith(\" \")) {\r\n      //user has finished the word\r\n\r\n      if (activeWord === typed.length) {\r\n        i = (i + 1) % 6;\r\n        console.log(\"ur value is \" + i);\r\n        if (i > 6) i = 0;\r\n        typed = sentences[i]\r\n          .split(\" \")\r\n          .sort(() => (Math.random() > 0.5 ? 1 : -1));\r\n        // console.log(\"the last word of the string \");\r\n        setActiveWord(0);\r\n        let temp = correctWordArray.filter(Boolean).length + correctWord.first;\r\n        let temp2 =\r\n          correctWordArray.length -\r\n          correctWordArray.filter(Boolean).length +\r\n          correctWord.second;\r\n        setCorrectWord({ first: temp, second: temp2 });\r\n        setCorrectWordArray([]);\r\n        return;\r\n      } else {\r\n        setActiveWord(activeWord + 1);\r\n\r\n        setUserInput(\"\");\r\n        setCorrectWordArray((data) => {\r\n          const word = value.trim();\r\n          const newResult = [...data];\r\n          newResult[activeWord] = word === typed[activeWord];\r\n          // console.log(\"curr word is \" + typed.current[activeWord]);\r\n          return newResult;\r\n        });\r\n      }\r\n    } else {\r\n      setUserInput(value);\r\n    }\r\n  };\r\n  const [restartPressed, setRestartPressed] = useState(false);\r\n  const restart = () => {\r\n    console.log(\"u just presssed restart butt\");\r\n    setHide(false);\r\n    setUserInput(\"\");\r\n    setRestartPressed(true);\r\n    setActiveWord(0);\r\n    setCorrectWordArray([]);\r\n    setCounting(false);\r\n    setCurrTime(0);\r\n    setSpeed(0);\r\n    setKeyStroke(0);\r\n    setCorrectWord({ first: 0, second: 0 });\r\n    console.log(hide);\r\n  };\r\n  return (\r\n    <div className=\"test_container\">\r\n      <Navbar />\r\n      <hr />\r\n\r\n      <div className=\"typing_test_box\">\r\n        <div\r\n          className=\"typing_content\"\r\n          style={{ display: hide ? \"none\" : \"block\" }}\r\n        >\r\n          <div>\r\n            {typed.map((char, index) => {\r\n              let color;\r\n              if (index === activeWord) color = \"brown\";\r\n              // else if(index<activeWord) color = ;\r\n              return (\r\n                <Word\r\n                  text={char}\r\n                  active={index === activeWord}\r\n                  correct={correctWordArray[index]}\r\n                />\r\n              );\r\n              // return <span style={{: color }}>{char} </span>;\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"typing_box\">\r\n          <input\r\n            className=\"typing_input\"\r\n            value={userInput}\r\n            placeholder=\"Start Typing....\"\r\n            onChange={(e) => processInput(e.target.value)}\r\n          />\r\n          <div className=\"timeCount\">{60 - currTime}</div>\r\n          <div className=\"timeCount timeRestart\" onClick={restart}>\r\n            <img src={restartPng} className=\"restartPng\" />\r\n          </div>\r\n        </div>\r\n        <Timer\r\n          startCounting={startCounting}\r\n          correctWord={correctWord.first}\r\n          setSpeed={setSpeed}\r\n          setCurrTime={setCurrTime}\r\n          restartPressed={restartPressed}\r\n        />\r\n        {/* <button onClick={restart}> restart</button> */}\r\n        <div\r\n          style={{\r\n            justifyContent: \"center\",\r\n            display: !hide ? \"none\" : \"flex\",\r\n          }}\r\n        >\r\n          <Result\r\n            correctWord={correctWord.first}\r\n            wrongWord={correctWord.second}\r\n            speed={correctWord.first / (currTime / 60)}\r\n            keyStroke={keyStroke}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Home from \"./Home/Js/Home\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Test from \"./Home/Test/js/Test\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/test\" element={<Test />} />\n          {/* <Route path=\"/test\">\n            <Test />\n          </Route> */}\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n//\n//   const [curr, setCurr] = useState([]);\n//   const [right, setRight] = useState();\n//   const checkWord = (e) => {\n//     if (e.key === \" \") {\n//       console.log(e.target.value);\n//       e.target.value = null;\n//     }\n//   };\n//   useEffect(() => {\n//     typed.split(\" \").forEach((char) => {\n//       // const newList = curr.concat(char);\n//       // console.log(char);\n//       setCurr([...curr, char]);\n//     });\n//   }, []);\n// {typed.split(\" \").map((char, index) => {\n//   return <span wordNumber={index}>{char} </span>;\n// })}\n// <br />\n// <input onKeyPress={checkWord}></input>\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}